{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toBeVisible = toBeVisible;\n\nvar _jestMatcherUtils = require(\"jest-matcher-utils\");\n\nvar _utils = require(\"./utils\");\n\nfunction isStyleVisible(element) {\n  const getComputedStyle = element.ownerDocument.defaultView.getComputedStyle;\n\n  const _getComputedStyle = getComputedStyle(element),\n        display = _getComputedStyle.display,\n        visibility = _getComputedStyle.visibility,\n        opacity = _getComputedStyle.opacity;\n\n  return display !== 'none' && visibility !== 'hidden' && visibility !== 'collapse' && opacity !== '0' && opacity !== 0;\n}\n\nfunction isElementVisible(element) {\n  return isStyleVisible(element) && !element.hasAttribute('hidden') && (!element.parentElement || isElementVisible(element.parentElement));\n}\n\nfunction toBeVisible(element) {\n  (0, _utils.checkHtmlElement)(element, toBeVisible, this);\n  const isVisible = isElementVisible(element);\n  return {\n    pass: isVisible,\n    message: () => {\n      const is = isVisible ? 'is' : 'is not';\n      return [(0, _jestMatcherUtils.matcherHint)(`${this.isNot ? '.not' : ''}.toBeVisible`, 'element', ''), '', `Received element ${is} visible:`, `  ${(0, _jestMatcherUtils.printReceived)(element.cloneNode(false))}`].join('\\n');\n    }\n  };\n}","map":{"version":3,"sources":["/Users/wajeeh/Desktop/react-dashboard/node_modules/@testing-library/jest-dom/dist/to-be-visible.js"],"names":["Object","defineProperty","exports","value","toBeVisible","_jestMatcherUtils","require","_utils","isStyleVisible","element","getComputedStyle","ownerDocument","defaultView","display","visibility","opacity","isElementVisible","hasAttribute","parentElement","checkHtmlElement","isVisible","pass","message","is","matcherHint","isNot","printReceived","cloneNode","join"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,WAAR,GAAsBA,WAAtB;;AAEA,IAAIC,iBAAiB,GAAGC,OAAO,CAAC,oBAAD,CAA/B;;AAEA,IAAIC,MAAM,GAAGD,OAAO,CAAC,SAAD,CAApB;;AAEA,SAASE,cAAT,CAAwBC,OAAxB,EAAiC;AAAA,QAE7BC,gBAF6B,GAG3BD,OAAO,CAACE,aAAR,CAAsBC,WAHK,CAE7BF,gBAF6B;;AAAA,4BAQ3BA,gBAAgB,CAACD,OAAD,CARW;AAAA,QAK7BI,OAL6B,qBAK7BA,OAL6B;AAAA,QAM7BC,UAN6B,qBAM7BA,UAN6B;AAAA,QAO7BC,OAP6B,qBAO7BA,OAP6B;;AAS/B,SAAOF,OAAO,KAAK,MAAZ,IAAsBC,UAAU,KAAK,QAArC,IAAiDA,UAAU,KAAK,UAAhE,IAA8EC,OAAO,KAAK,GAA1F,IAAiGA,OAAO,KAAK,CAApH;AACD;;AAED,SAASC,gBAAT,CAA0BP,OAA1B,EAAmC;AACjC,SAAOD,cAAc,CAACC,OAAD,CAAd,IAA2B,CAACA,OAAO,CAACQ,YAAR,CAAqB,QAArB,CAA5B,KAA+D,CAACR,OAAO,CAACS,aAAT,IAA0BF,gBAAgB,CAACP,OAAO,CAACS,aAAT,CAAzG,CAAP;AACD;;AAED,SAASd,WAAT,CAAqBK,OAArB,EAA8B;AAC5B,GAAC,GAAGF,MAAM,CAACY,gBAAX,EAA6BV,OAA7B,EAAsCL,WAAtC,EAAmD,IAAnD;AACA,QAAMgB,SAAS,GAAGJ,gBAAgB,CAACP,OAAD,CAAlC;AACA,SAAO;AACLY,IAAAA,IAAI,EAAED,SADD;AAELE,IAAAA,OAAO,EAAE,MAAM;AACb,YAAMC,EAAE,GAAGH,SAAS,GAAG,IAAH,GAAU,QAA9B;AACA,aAAO,CAAC,CAAC,GAAGf,iBAAiB,CAACmB,WAAtB,EAAoC,GAAE,KAAKC,KAAL,GAAa,MAAb,GAAsB,EAAG,cAA/D,EAA8E,SAA9E,EAAyF,EAAzF,CAAD,EAA+F,EAA/F,EAAoG,oBAAmBF,EAAG,WAA1H,EAAuI,KAAI,CAAC,GAAGlB,iBAAiB,CAACqB,aAAtB,EAAqCjB,OAAO,CAACkB,SAAR,CAAkB,KAAlB,CAArC,CAA+D,EAA1M,EAA6MC,IAA7M,CAAkN,IAAlN,CAAP;AACD;AALI,GAAP;AAOD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toBeVisible = toBeVisible;\n\nvar _jestMatcherUtils = require(\"jest-matcher-utils\");\n\nvar _utils = require(\"./utils\");\n\nfunction isStyleVisible(element) {\n  const {\n    getComputedStyle\n  } = element.ownerDocument.defaultView;\n  const {\n    display,\n    visibility,\n    opacity\n  } = getComputedStyle(element);\n  return display !== 'none' && visibility !== 'hidden' && visibility !== 'collapse' && opacity !== '0' && opacity !== 0;\n}\n\nfunction isElementVisible(element) {\n  return isStyleVisible(element) && !element.hasAttribute('hidden') && (!element.parentElement || isElementVisible(element.parentElement));\n}\n\nfunction toBeVisible(element) {\n  (0, _utils.checkHtmlElement)(element, toBeVisible, this);\n  const isVisible = isElementVisible(element);\n  return {\n    pass: isVisible,\n    message: () => {\n      const is = isVisible ? 'is' : 'is not';\n      return [(0, _jestMatcherUtils.matcherHint)(`${this.isNot ? '.not' : ''}.toBeVisible`, 'element', ''), '', `Received element ${is} visible:`, `  ${(0, _jestMatcherUtils.printReceived)(element.cloneNode(false))}`].join('\\n');\n    }\n  };\n}"]},"metadata":{},"sourceType":"script"}