{"ast":null,"code":"var _jsxFileName = \"/Users/wajeeh/Desktop/react-dashboard/src/App.js\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport \"./App.css\";\nimport Header from \"./components/layout/Header\";\nimport Settings from \"./components/settings/Settings\";\nimport Home from \"./components/home/Home\";\nimport Todos from \"./components/todos/Todos\";\nexport class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: [{\n        id: \"0\",\n        firstName: \"\",\n        lastName: \"\",\n        dobDay: 0,\n        dobMonth: 0,\n        country: \"USA\",\n        todos: [],\n        active: true\n      }]\n    };\n\n    this.getActiveUser = () => {\n      return this.state.users.filter(user => {\n        return user.active;\n      })[0];\n    };\n\n    this.deactivateActiveUser = () => {\n      this.setState({\n        users: this.state.users.map(user => {\n          if (user.active) {\n            user.active = false;\n          }\n\n          return user;\n        })\n      });\n    };\n\n    this.activateUser = id => {\n      console.log(\"activate user method\");\n      this.deactivateActiveUser(); // Activate this user\n\n      this.setState({\n        users: this.state.users.map(user => {\n          if (user.id === id) {\n            user.active = !user.active;\n          }\n\n          return user;\n        })\n      });\n    };\n\n    this.deleteUser = id => {\n      console.log(\"delete user method\");\n      this.setState({\n        users: this.state.users.filter(user => {\n          return user.id !== id;\n        })\n      });\n    };\n\n    this.addNewUser = (firstName, lastName, dobDay, dobMonth, country) => {\n      // Create new user object.\n      const uniqueId = `${firstName}_${dobMonth}_${lastName}_${dobDay}_${new Date().getTime()}`;\n      const newUser = {\n        id: uniqueId,\n        firstName: firstName,\n        lastName: lastName,\n        dobDay: dobDay,\n        dobMonth: dobMonth,\n        country: country,\n        todos: [],\n        active: true\n      };\n      this.deactivateActiveUser(); // Copy old state.users array and add new user to end.\n\n      this.setState({\n        users: [...this.state.users, newUser]\n      }); // localStorage.setItem(\"state\", JSON.stringify(this.state.users));\n    };\n\n    this.addTodo = title => {\n      const uniqueId = `${title}_${new Date().getTime()}`;\n      const newTodo = {\n        id: uniqueId,\n        title: title,\n        completed: false\n      };\n      this.setState({\n        users: this.state.users.map(user => {\n          if (user.id === this.getActiveUser().id) {\n            user.todos = [...user.todos, newTodo];\n          }\n\n          return user;\n        })\n      });\n    };\n\n    this.removeTodo = id => {\n      this.setState({\n        users: this.state.users.map(user => {\n          if (user.id === this.getActiveUser().id) {\n            user.todos = this.getActiveUser().todos.filter(todo => {\n              return todo.id !== id;\n            });\n          }\n\n          return user;\n        })\n      });\n    };\n\n    this.todoCompleted = id => {\n      this.setState({\n        users: this.state.users.map(user => {\n          if (user.id === this.getActiveUser().id) {\n            user.todos = this.getActiveUser().todos.map(todo => {\n              if (todo.id === id) {\n                todo.completed = !todo.completed;\n              }\n\n              return todo;\n            });\n          }\n\n          return user;\n        })\n      });\n    };\n\n    this.getCurrentHour = () => {\n      return new Date().getHours();\n    };\n\n    this.getCurrentDay = () => {\n      return new Date().getDate();\n    };\n\n    this.getCurrentMonth = () => {\n      return new Date().getMonth() + 1;\n    };\n  }\n\n  render() {\n    localStorage.setItem(\"state\", JSON.stringify(this.state.users));\n    console.log(localStorage.getItem(\"state\"));\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"overlay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(Home, {\n      getActiveUser: this.getActiveUser,\n      getCurrentHour: this.getCurrentHour,\n      getCurrentDay: this.getCurrentDay,\n      getCurrentMonth: this.getCurrentMonth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }))), React.createElement(Route, {\n      path: \"/settings\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(Settings, {\n      users: this.state.users,\n      activeUser: this.getActiveUser,\n      addNewUser: this.addNewUser,\n      activateUser: this.activateUser,\n      deleteUser: this.deleteUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }))), React.createElement(Route, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(Todos, {\n      activeUser: this.getActiveUser,\n      addTodo: this.addTodo,\n      removeTodo: this.removeTodo,\n      todoCompleted: this.todoCompleted,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }))), React.createElement(Redirect, {\n      exact: true,\n      from: \"/*\",\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    })))));\n  }\n\n}\nexport default App;","map":{"version":3,"sources":["/Users/wajeeh/Desktop/react-dashboard/src/App.js"],"names":["React","Component","BrowserRouter","Route","Switch","Redirect","Header","Settings","Home","Todos","App","state","users","id","firstName","lastName","dobDay","dobMonth","country","todos","active","getActiveUser","filter","user","deactivateActiveUser","setState","map","activateUser","console","log","deleteUser","addNewUser","uniqueId","Date","getTime","newUser","addTodo","title","newTodo","completed","removeTodo","todo","todoCompleted","getCurrentHour","getHours","getCurrentDay","getDate","getCurrentMonth","getMonth","render","localStorage","setItem","JSON","stringify","getItem"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport \"./App.css\";\nimport Header from \"./components/layout/Header\";\nimport Settings from \"./components/settings/Settings\";\nimport Home from \"./components/home/Home\";\nimport Todos from \"./components/todos/Todos\";\n\nexport class App extends Component {\n  state = {\n    users: [\n      {\n        id: \"0\",\n        firstName: \"\",\n        lastName: \"\",\n        dobDay: 0,\n        dobMonth: 0,\n        country: \"USA\",\n        todos: [],\n        active: true\n      }\n    ]\n  };\n\n  // componentDidMount = () => {\n  //   if (JSON.parse(localStorage.getItem(\"state\")) != null) {\n  //     this.setState(localStorage.getItem(\"state\"));\n  //   }\n  // };\n\n  //\n  // Settings functions\n  //\n\n  getActiveUser = () => {\n    return this.state.users.filter(user => {\n      return user.active;\n    })[0];\n  };\n\n  deactivateActiveUser = () => {\n    this.setState({\n      users: this.state.users.map(user => {\n        if (user.active) {\n          user.active = false;\n        }\n        return user;\n      })\n    });\n  };\n\n  activateUser = id => {\n    console.log(\"activate user method\");\n    this.deactivateActiveUser();\n\n    // Activate this user\n    this.setState({\n      users: this.state.users.map(user => {\n        if (user.id === id) {\n          user.active = !user.active;\n        }\n        return user;\n      })\n    });\n  };\n\n  deleteUser = id => {\n    console.log(\"delete user method\");\n    this.setState({\n      users: this.state.users.filter(user => {\n        return user.id !== id;\n      })\n    });\n  };\n\n  addNewUser = (firstName, lastName, dobDay, dobMonth, country) => {\n    // Create new user object.\n    const uniqueId = `${firstName}_${dobMonth}_${lastName}_${dobDay}_${new Date().getTime()}`;\n    const newUser = {\n      id: uniqueId,\n      firstName: firstName,\n      lastName: lastName,\n      dobDay: dobDay,\n      dobMonth: dobMonth,\n      country: country,\n      todos: [],\n      active: true\n    };\n\n    this.deactivateActiveUser();\n    // Copy old state.users array and add new user to end.\n    this.setState({ users: [...this.state.users, newUser] });\n\n    // localStorage.setItem(\"state\", JSON.stringify(this.state.users));\n  };\n\n  //\n  // Todo Functions\n  //\n\n  addTodo = title => {\n    const uniqueId = `${title}_${new Date().getTime()}`;\n    const newTodo = {\n      id: uniqueId,\n      title: title,\n      completed: false\n    };\n\n    this.setState({\n      users: this.state.users.map(user => {\n        if (user.id === this.getActiveUser().id) {\n          user.todos = [...user.todos, newTodo];\n        }\n        return user;\n      })\n    });\n  };\n\n  removeTodo = id => {\n    this.setState({\n      users: this.state.users.map(user => {\n        if (user.id === this.getActiveUser().id) {\n          user.todos = this.getActiveUser().todos.filter(todo => {\n            return todo.id !== id;\n          });\n        }\n        return user;\n      })\n    });\n  };\n\n  todoCompleted = id => {\n    this.setState({\n      users: this.state.users.map(user => {\n        if (user.id === this.getActiveUser().id) {\n          user.todos = this.getActiveUser().todos.map(todo => {\n            if (todo.id === id) {\n              todo.completed = !todo.completed;\n            }\n            return todo;\n          });\n        }\n        return user;\n      })\n    });\n  };\n\n  //\n  // Home Functions\n  //\n\n  getCurrentHour = () => {\n    return new Date().getHours();\n  };\n\n  getCurrentDay = () => {\n    return new Date().getDate();\n  };\n\n  getCurrentMonth = () => {\n    return new Date().getMonth() + 1;\n  };\n\n  render() {\n    localStorage.setItem(\"state\", JSON.stringify(this.state.users));\n    console.log(localStorage.getItem(\"state\"));\n\n    return (\n      <div className='App'>\n        <div id='overlay'></div>\n        <BrowserRouter>\n          <div className='container'>\n            <Header />\n            <Switch>\n              <Route exact path='/'>\n                <div>\n                  <Home\n                    getActiveUser={this.getActiveUser}\n                    getCurrentHour={this.getCurrentHour}\n                    getCurrentDay={this.getCurrentDay}\n                    getCurrentMonth={this.getCurrentMonth}\n                  />\n                </div>\n              </Route>\n              {/* Router */}\n              <Route path='/settings'>\n                <div>\n                  <Settings\n                    users={this.state.users}\n                    activeUser={this.getActiveUser}\n                    addNewUser={this.addNewUser}\n                    activateUser={this.activateUser}\n                    deleteUser={this.deleteUser}\n                  />\n                </div>\n              </Route>\n              {/* Router */}\n              <Route>\n                <div>\n                  <Todos\n                    activeUser={this.getActiveUser}\n                    addTodo={this.addTodo}\n                    removeTodo={this.removeTodo}\n                    todoCompleted={this.todoCompleted}\n                  />\n                </div>\n              </Route>\n              <Redirect exact from='/*' to='/' />\n            </Switch>\n          </div>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}