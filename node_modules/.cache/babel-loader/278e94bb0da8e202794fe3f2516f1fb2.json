{"ast":null,"code":"var _jsxFileName = \"/Users/wajeeh/Desktop/react-dashboard/src/components/OutsideAlert.js\";\nimport React, { useRef, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction useOutsideAlerter(ref) {\n  /**\n   * Alert if clicked on outside of element\n   */\n  function handleClickOutside(event) {\n    if (ref.current && !ref.current.contains(event.target)) {\n      alert(\"You clicked outside of me!\");\n    }\n  }\n\n  useEffect(() => {\n    // Bind the event listener\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  });\n}\n/**\n * Component that alerts if you click outside of it\n */\n\n\nfunction OutsideAlerter(props) {\n  const wrapperRef = useRef(null);\n  useOutsideAlerter(wrapperRef);\n  return React.createElement(\"div\", {\n    ref: wrapperRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, props.children);\n}\n\nOutsideAlerter.propTypes = {\n  children: PropTypes.element.isRequired\n};\nexport default OutsideAlerter;","map":{"version":3,"sources":["/Users/wajeeh/Desktop/react-dashboard/src/components/OutsideAlert.js"],"names":["React","useRef","useEffect","PropTypes","useOutsideAlerter","ref","handleClickOutside","event","current","contains","target","alert","document","addEventListener","removeEventListener","OutsideAlerter","props","wrapperRef","children","propTypes","element","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,SAASC,iBAAT,CAA2BC,GAA3B,EAAgC;AAC9B;;;AAGA,WAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AACjC,QAAIF,GAAG,CAACG,OAAJ,IAAe,CAACH,GAAG,CAACG,OAAJ,CAAYC,QAAZ,CAAqBF,KAAK,CAACG,MAA3B,CAApB,EAAwD;AACtDC,MAAAA,KAAK,CAAC,4BAAD,CAAL;AACD;AACF;;AAEDT,EAAAA,SAAS,CAAC,MAAM;AACd;AACAU,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCP,kBAAvC;AACA,WAAO,MAAM;AACX;AACAM,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CR,kBAA1C;AACD,KAHD;AAID,GAPQ,CAAT;AAQD;AAED;;;;;AAGA,SAASS,cAAT,CAAwBC,KAAxB,EAA+B;AAC7B,QAAMC,UAAU,GAAGhB,MAAM,CAAC,IAAD,CAAzB;AACAG,EAAAA,iBAAiB,CAACa,UAAD,CAAjB;AAEA,SAAO;AAAK,IAAA,GAAG,EAAEA,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBD,KAAK,CAACE,QAA7B,CAAP;AACD;;AAEDH,cAAc,CAACI,SAAf,GAA2B;AACzBD,EAAAA,QAAQ,EAAEf,SAAS,CAACiB,OAAV,CAAkBC;AADH,CAA3B;AAIA,eAAeN,cAAf","sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction useOutsideAlerter(ref) {\n  /**\n   * Alert if clicked on outside of element\n   */\n  function handleClickOutside(event) {\n    if (ref.current && !ref.current.contains(event.target)) {\n      alert(\"You clicked outside of me!\");\n    }\n  }\n\n  useEffect(() => {\n    // Bind the event listener\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  });\n}\n\n/**\n * Component that alerts if you click outside of it\n */\nfunction OutsideAlerter(props) {\n  const wrapperRef = useRef(null);\n  useOutsideAlerter(wrapperRef);\n\n  return <div ref={wrapperRef}>{props.children}</div>;\n}\n\nOutsideAlerter.propTypes = {\n  children: PropTypes.element.isRequired\n};\n\nexport default OutsideAlerter;\n"]},"metadata":{},"sourceType":"module"}