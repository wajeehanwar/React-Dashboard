{"ast":null,"code":"import _classCallCheck from\"/Users/wajeeh/Documents/Github/React Dashboard/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/wajeeh/Documents/Github/React Dashboard/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/wajeeh/Documents/Github/React Dashboard/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/wajeeh/Documents/Github/React Dashboard/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/wajeeh/Documents/Github/React Dashboard/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";export var TodoItem=/*#__PURE__*/function(_Component){_inherits(TodoItem,_Component);function TodoItem(){var _getPrototypeOf2;var _this;_classCallCheck(this,TodoItem);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(TodoItem)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.todoTextStyle=function(){if(_this.props.todo.completed){return\"todo-incomplete\";}else{return\"todo-complete\";}};_this.todoButtonStyle=function(){if(_this.props.todo.completed){return\"todo-incomplete-button\";}else{return\"todo-complete-button\";}};return _this;}_createClass(TodoItem,[{key:\"render\",value:function render(){return React.createElement(\"div\",null,React.createElement(\"div\",{className:\"todo-item\"},React.createElement(\"span\",{className:\"todo-buttons\"},React.createElement(\"input\",{type:\"button\",className:this.todoButtonStyle(),value:\"\\u2714\",onClick:this.props.todoCompleted.bind(this,this.props.todo.id)})),React.createElement(\"span\",{className:\"todo-text \".concat(this.todoTextStyle())},this.props.todo.title),React.createElement(\"span\",{className:\"todo-buttons\"},React.createElement(\"button\",{type:\"button\",className:\"todo-remove-button\",onClick:this.props.removeTodo.bind(this,this.props.todo.id)},\"\\u2718\"))));}}]);return TodoItem;}(Component);export default TodoItem;","map":{"version":3,"sources":["/Users/wajeeh/Documents/Github/React Dashboard/src/components/todos/TodoItem.js"],"names":["React","Component","TodoItem","todoTextStyle","props","todo","completed","todoButtonStyle","todoCompleted","bind","id","title","removeTodo"],"mappings":"mpBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CAGA,UAAaC,CAAAA,QAAb,uYACEC,aADF,CACkB,UAAM,CACpB,GAAI,MAAKC,KAAL,CAAWC,IAAX,CAAgBC,SAApB,CAA+B,CAC7B,MAAO,iBAAP,CACD,CAFD,IAEO,CACL,MAAO,eAAP,CACD,CACF,CAPH,OASEC,eATF,CASoB,UAAM,CACtB,GAAI,MAAKH,KAAL,CAAWC,IAAX,CAAgBC,SAApB,CAA+B,CAC7B,MAAO,wBAAP,CACD,CAFD,IAEO,CACL,MAAO,sBAAP,CACD,CACF,CAfH,2EAiBW,CACP,MACE,gCACE,2BAAK,SAAS,CAAE,WAAhB,EACE,4BAAM,SAAS,CAAC,cAAhB,EACE,6BACE,IAAI,CAAC,QADP,CAEE,SAAS,CAAE,KAAKC,eAAL,EAFb,CAGE,KAAK,CAAC,QAHR,CAIE,OAAO,CAAE,KAAKH,KAAL,CAAWI,aAAX,CAAyBC,IAAzB,CAA8B,IAA9B,CAAoC,KAAKL,KAAL,CAAWC,IAAX,CAAgBK,EAApD,CAJX,EADF,CADF,CASE,4BAAM,SAAS,qBAAe,KAAKP,aAAL,EAAf,CAAf,EACG,KAAKC,KAAL,CAAWC,IAAX,CAAgBM,KADnB,CATF,CAYE,4BAAM,SAAS,CAAC,cAAhB,EACE,8BACE,IAAI,CAAC,QADP,CAEE,SAAS,CAAC,oBAFZ,CAGE,OAAO,CAAE,KAAKP,KAAL,CAAWQ,UAAX,CAAsBH,IAAtB,CAA2B,IAA3B,CAAiC,KAAKL,KAAL,CAAWC,IAAX,CAAgBK,EAAjD,CAHX,WADF,CAZF,CADF,CADF,CA0BD,CA5CH,sBAA8BT,SAA9B,EAqDA,cAAeC,CAAAA,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport class TodoItem extends Component {\n  todoTextStyle = () => {\n    if (this.props.todo.completed) {\n      return \"todo-incomplete\";\n    } else {\n      return \"todo-complete\";\n    }\n  };\n\n  todoButtonStyle = () => {\n    if (this.props.todo.completed) {\n      return \"todo-incomplete-button\";\n    } else {\n      return \"todo-complete-button\";\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <div className={\"todo-item\"}>\n          <span className='todo-buttons'>\n            <input\n              type='button'\n              className={this.todoButtonStyle()}\n              value='âœ”'\n              onClick={this.props.todoCompleted.bind(this, this.props.todo.id)}\n            />\n          </span>\n          <span className={`todo-text ${this.todoTextStyle()}`}>\n            {this.props.todo.title}\n          </span>\n          <span className='todo-buttons'>\n            <button\n              type='button'\n              className='todo-remove-button'\n              onClick={this.props.removeTodo.bind(this, this.props.todo.id)}\n            >\n              &#10008;\n            </button>\n          </span>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired,\n  removeTodo: PropTypes.func.isRequired,\n  todoCompleted: PropTypes.func.isRequired\n};\n\nexport default TodoItem;\n"]},"metadata":{},"sourceType":"module"}