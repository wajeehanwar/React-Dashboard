{"ast":null,"code":"var _jsxFileName = \"/Users/wajeeh/Desktop/react-dashboard/src/components/OutsideAlerter.js\";\nimport React, { Component, useRef, useEffect } from \"react\";\nimport withRouter from \"react-router-dom\";\n\nclass OutsideAlerter extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.useOutsideAlerter = ref => {\n      /**\n       * Alert if clicked on outside of element\n       */\n      handleClickOutside = event => {\n        if (ref.current && !ref.current.contains(event.target)) {\n          // Redirect to settings route\n          this.props.history.push(\"/settings\");\n        }\n      };\n\n      useEffect(() => {\n        // Bind the event listener\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n          // Unbind the event listener on clean up\n          document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n      });\n    };\n\n    this.OutsideAlerter = props => {\n      const wrapperRef = useRef(null);\n      useOutsideAlerter(wrapperRef);\n      return React.createElement(\"div\", {\n        ref: wrapperRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, props.children);\n    };\n  }\n\n  render() {\n    return null;\n  }\n\n}\n\nexport default withRouter(OutsideAlerter);","map":{"version":3,"sources":["/Users/wajeeh/Desktop/react-dashboard/src/components/OutsideAlerter.js"],"names":["React","Component","useRef","useEffect","withRouter","OutsideAlerter","useOutsideAlerter","ref","handleClickOutside","event","current","contains","target","props","history","push","document","addEventListener","removeEventListener","wrapperRef","children","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,SAAnC,QAAoD,OAApD;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;AAEA,MAAMC,cAAN,SAA6BJ,SAA7B,CAAuC;AAAA;AAAA;;AAAA,SACrCK,iBADqC,GACjBC,GAAG,IAAI;AACzB;;;AAGAC,MAAAA,kBAAkB,GAAGC,KAAK,IAAI;AAC5B,YAAIF,GAAG,CAACG,OAAJ,IAAe,CAACH,GAAG,CAACG,OAAJ,CAAYC,QAAZ,CAAqBF,KAAK,CAACG,MAA3B,CAApB,EAAwD;AACtD;AACA,eAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,WAAxB;AACD;AACF,OALD;;AAOAZ,MAAAA,SAAS,CAAC,MAAM;AACd;AACAa,QAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCT,kBAAvC;AACA,eAAO,MAAM;AACX;AACAQ,UAAAA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CV,kBAA1C;AACD,SAHD;AAID,OAPQ,CAAT;AAQD,KApBoC;;AAAA,SAyBrCH,cAzBqC,GAyBpBQ,KAAK,IAAI;AACxB,YAAMM,UAAU,GAAGjB,MAAM,CAAC,IAAD,CAAzB;AACAI,MAAAA,iBAAiB,CAACa,UAAD,CAAjB;AAEA,aAAO;AAAK,QAAA,GAAG,EAAEA,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuBN,KAAK,CAACO,QAA7B,CAAP;AACD,KA9BoC;AAAA;;AAgCrCC,EAAAA,MAAM,GAAG;AACP,WAAO,IAAP;AACD;;AAlCoC;;AAqCvC,eAAejB,UAAU,CAACC,cAAD,CAAzB","sourcesContent":["import React, { Component, useRef, useEffect } from \"react\";\nimport withRouter from \"react-router-dom\";\n\nclass OutsideAlerter extends Component {\n  useOutsideAlerter = ref => {\n    /**\n     * Alert if clicked on outside of element\n     */\n    handleClickOutside = event => {\n      if (ref.current && !ref.current.contains(event.target)) {\n        // Redirect to settings route\n        this.props.history.push(\"/settings\");\n      }\n    };\n\n    useEffect(() => {\n      // Bind the event listener\n      document.addEventListener(\"mousedown\", handleClickOutside);\n      return () => {\n        // Unbind the event listener on clean up\n        document.removeEventListener(\"mousedown\", handleClickOutside);\n      };\n    });\n  };\n\n  /**\n   * Component that alerts if you click outside of it\n   */\n  OutsideAlerter = props => {\n    const wrapperRef = useRef(null);\n    useOutsideAlerter(wrapperRef);\n\n    return <div ref={wrapperRef}>{props.children}</div>;\n  };\n\n  render() {\n    return null;\n  }\n}\n\nexport default withRouter(OutsideAlerter);\n"]},"metadata":{},"sourceType":"module"}