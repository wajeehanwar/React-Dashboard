{"ast":null,"code":"var _jsxFileName = \"/Users/wajeeh/Desktop/react-dashboard/src/components/todos/TodoItem.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nexport class TodoItem extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.todoTextStyle = () => {\n      if (this.props.todo.completed) {\n        return \"todo-complete\";\n      } else {\n        return \"todo-incomplete\";\n      }\n    };\n\n    this.todoButtonStyle = () => {\n      if (this.props.todo.completed) {\n        return \"todo-complete-button\";\n      } else {\n        return \"todo-incomplete-button\";\n      }\n    };\n\n    this.todoCompleteToggle = () => {\n      if (this.props.todo.completed) {\n        return \"✔\";\n      } else {\n        return \"❖\";\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: `todo-item ${this.todoTextStyle()}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"todo-buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"button\",\n      className: this.todoButtonStyle(),\n      value: this.todoCompleteToggle(),\n      onClick: this.props.todoCompleted.bind(this, this.props.todo.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"todo-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, this.props.todo.title), React.createElement(\"span\", {\n      className: \"todo-buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"button\",\n      className: this.todoButtonStyle(),\n      value: this.todoCompleteToggle(),\n      onClick: this.props.todoCompleted.bind(this, this.props.todo.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"todo-remove-button\",\n      onClick: this.props.removeTodo.bind(this, this.props.todo.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"\\u2718\"))));\n  }\n\n}\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired,\n  removeTodo: PropTypes.func.isRequired,\n  todoCompleted: PropTypes.func.isRequired\n};\nexport default TodoItem;","map":{"version":3,"sources":["/Users/wajeeh/Desktop/react-dashboard/src/components/todos/TodoItem.js"],"names":["React","Component","PropTypes","TodoItem","todoTextStyle","props","todo","completed","todoButtonStyle","todoCompleteToggle","render","todoCompleted","bind","id","title","removeTodo","propTypes","object","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SACtCG,aADsC,GACtB,MAAM;AACpB,UAAI,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,SAApB,EAA+B;AAC7B,eAAO,eAAP;AACD,OAFD,MAEO;AACL,eAAO,iBAAP;AACD;AACF,KAPqC;;AAAA,SAStCC,eATsC,GASpB,MAAM;AACtB,UAAI,KAAKH,KAAL,CAAWC,IAAX,CAAgBC,SAApB,EAA+B;AAC7B,eAAO,sBAAP;AACD,OAFD,MAEO;AACL,eAAO,wBAAP;AACD;AACF,KAfqC;;AAAA,SAiBtCE,kBAjBsC,GAiBjB,MAAM;AACzB,UAAI,KAAKJ,KAAL,CAAWC,IAAX,CAAgBC,SAApB,EAA+B;AAC7B,eAAO,GAAP;AACD,OAFD,MAEO;AACL,eAAO,GAAP;AACD;AACF,KAvBqC;AAAA;;AAyBtCG,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAG,aAAY,KAAKN,aAAL,EAAqB,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAE,KAAKI,eAAL,EAFb;AAGE,MAAA,KAAK,EAAE,KAAKC,kBAAL,EAHT;AAIE,MAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWM,aAAX,CAAyBC,IAAzB,CAA8B,IAA9B,EAAoC,KAAKP,KAAL,CAAWC,IAAX,CAAgBO,EAApD,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EASE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4B,KAAKR,KAAL,CAAWC,IAAX,CAAgBQ,KAA5C,CATF,EAUE;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAE,KAAKN,eAAL,EAFb;AAGE,MAAA,KAAK,EAAE,KAAKC,kBAAL,EAHT;AAIE,MAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWM,aAAX,CAAyBC,IAAzB,CAA8B,IAA9B,EAAoC,KAAKP,KAAL,CAAWC,IAAX,CAAgBO,EAApD,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,oBAFZ;AAGE,MAAA,OAAO,EAAE,KAAKR,KAAL,CAAWU,UAAX,CAAsBH,IAAtB,CAA2B,IAA3B,EAAiC,KAAKP,KAAL,CAAWC,IAAX,CAAgBO,EAAjD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,CAVF,CADF,CADF;AA8BD;;AAxDqC;AA2DxCV,QAAQ,CAACa,SAAT,GAAqB;AACnBV,EAAAA,IAAI,EAAEJ,SAAS,CAACe,MAAV,CAAiBC,UADJ;AAEnBH,EAAAA,UAAU,EAAEb,SAAS,CAACiB,IAAV,CAAeD,UAFR;AAGnBP,EAAAA,aAAa,EAAET,SAAS,CAACiB,IAAV,CAAeD;AAHX,CAArB;AAMA,eAAef,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport class TodoItem extends Component {\n  todoTextStyle = () => {\n    if (this.props.todo.completed) {\n      return \"todo-complete\";\n    } else {\n      return \"todo-incomplete\";\n    }\n  };\n\n  todoButtonStyle = () => {\n    if (this.props.todo.completed) {\n      return \"todo-complete-button\";\n    } else {\n      return \"todo-incomplete-button\";\n    }\n  };\n\n  todoCompleteToggle = () => {\n    if (this.props.todo.completed) {\n      return \"✔\";\n    } else {\n      return \"❖\";\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <div className={`todo-item ${this.todoTextStyle()}`}>\n          <span className='todo-buttons'>\n            <input\n              type='button'\n              className={this.todoButtonStyle()}\n              value={this.todoCompleteToggle()}\n              onClick={this.props.todoCompleted.bind(this, this.props.todo.id)}\n            />\n          </span>\n          <div className='todo-text'>{this.props.todo.title}</div>\n          <span className='todo-buttons'>\n            <input\n              type='button'\n              className={this.todoButtonStyle()}\n              value={this.todoCompleteToggle()}\n              onClick={this.props.todoCompleted.bind(this, this.props.todo.id)}\n            />\n            <button\n              type='button'\n              className='todo-remove-button'\n              onClick={this.props.removeTodo.bind(this, this.props.todo.id)}\n            >\n              &#10008;\n            </button>\n          </span>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired,\n  removeTodo: PropTypes.func.isRequired,\n  todoCompleted: PropTypes.func.isRequired\n};\n\nexport default TodoItem;\n"]},"metadata":{},"sourceType":"module"}