{"ast":null,"code":"var _jsxFileName = \"/Users/wajeeh/Desktop/react-dashboard/src/components/todos/TodoItem.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nexport class TodoItem extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.todoStyle = () => {\n      if (this.props.todo.completed) {\n        return \"todo-complete\";\n      } else {\n        return \"todo-incomplete\";\n      }\n    };\n\n    this.todoCompleteToggle = () => {\n      if (this.props.todo.completed) {\n        return \"&#10004;\";\n      } else {\n        return \"todo-incomplete\";\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: this.todoStyle(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, this.props.todo.title, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      value: \"\\u2612\",\n      onClick: this.props.removeTodo.bind(this, this.props.todo.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"\\u2718\"), React.createElement(\"input\", {\n      type: \"button\",\n      value: \"\\u2714\",\n      onClick: this.props.todoCompleted.bind(this, this.props.todo.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }))));\n  }\n\n}\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired,\n  removeTodo: PropTypes.func.isRequired,\n  todoCompleted: PropTypes.func.isRequired\n};\nexport default TodoItem;","map":{"version":3,"sources":["/Users/wajeeh/Desktop/react-dashboard/src/components/todos/TodoItem.js"],"names":["React","Component","PropTypes","TodoItem","todoStyle","props","todo","completed","todoCompleteToggle","render","title","removeTodo","bind","id","todoCompleted","propTypes","object","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SACtCG,SADsC,GAC1B,MAAM;AAChB,UAAI,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,SAApB,EAA+B;AAC7B,eAAO,eAAP;AACD,OAFD,MAEO;AACL,eAAO,iBAAP;AACD;AACF,KAPqC;;AAAA,SAStCC,kBATsC,GASjB,MAAM;AACzB,UAAI,KAAKH,KAAL,CAAWC,IAAX,CAAgBC,SAApB,EAA+B;AAC7B,eAAO,UAAP;AACD,OAFD,MAEO;AACL,eAAO,iBAAP;AACD;AACF,KAfqC;AAAA;;AAiBtCE,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAE,KAAKL,SAAL,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKC,KAAL,CAAWC,IAAX,CAAgBI,KADnB,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,KAAK,EAAC,QAFR;AAGE,MAAA,OAAO,EAAE,KAAKL,KAAL,CAAWM,UAAX,CAAsBC,IAAtB,CAA2B,IAA3B,EAAiC,KAAKP,KAAL,CAAWC,IAAX,CAAgBO,EAAjD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAQE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,KAAK,EAAC,QAFR;AAGE,MAAA,OAAO,EAAE,KAAKR,KAAL,CAAWS,aAAX,CAAyBF,IAAzB,CAA8B,IAA9B,EAAoC,KAAKP,KAAL,CAAWC,IAAX,CAAgBO,EAApD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CAFF,CADF,CADF;AAqBD;;AAvCqC;AA0CxCV,QAAQ,CAACY,SAAT,GAAqB;AACnBT,EAAAA,IAAI,EAAEJ,SAAS,CAACc,MAAV,CAAiBC,UADJ;AAEnBN,EAAAA,UAAU,EAAET,SAAS,CAACgB,IAAV,CAAeD,UAFR;AAGnBH,EAAAA,aAAa,EAAEZ,SAAS,CAACgB,IAAV,CAAeD;AAHX,CAArB;AAMA,eAAed,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport class TodoItem extends Component {\n  todoStyle = () => {\n    if (this.props.todo.completed) {\n      return \"todo-complete\";\n    } else {\n      return \"todo-incomplete\";\n    }\n  };\n\n  todoCompleteToggle = () => {\n    if (this.props.todo.completed) {\n      return \"&#10004;\";\n    } else {\n      return \"todo-incomplete\";\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <div className={this.todoStyle()}>\n          {this.props.todo.title}\n          <span>\n            <button\n              type='button'\n              value='&#9746;'\n              onClick={this.props.removeTodo.bind(this, this.props.todo.id)}\n            >\n              &#10008;\n            </button>\n            <input\n              type='button'\n              value='&#10004;'\n              onClick={this.props.todoCompleted.bind(this, this.props.todo.id)}\n            />\n          </span>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired,\n  removeTodo: PropTypes.func.isRequired,\n  todoCompleted: PropTypes.func.isRequired\n};\n\nexport default TodoItem;\n"]},"metadata":{},"sourceType":"module"}