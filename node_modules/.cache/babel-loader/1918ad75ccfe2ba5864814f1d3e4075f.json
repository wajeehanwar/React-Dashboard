{"ast":null,"code":"var _jsxFileName = \"/Users/wajeeh/Desktop/react-dashboard/src/components/OutsideAlerter.js\";\nimport React, { useRef, useEffect } from \"react\";\nimport { useHistory, withRouter } from \"react-router-dom\";\n\nfunction useOutsideAlerter(ref) {\n  const history = useHistory();\n  /**\n   * Alert if clicked on outside of element\n   */\n\n  function handleClickOutside(event) {\n    if (ref.current && !ref.current.contains(event.target)) {\n      history.goBack();\n    }\n  }\n\n  useEffect(() => {\n    // Bind the event listener\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  });\n}\n/**\n * Component that alerts if you click outside of it\n */\n\n\nfunction OutsideAlerter(props) {\n  const wrapperRef = useRef(null);\n  useOutsideAlerter(wrapperRef);\n  return React.createElement(\"div\", {\n    ref: wrapperRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, props.children);\n}\n\nexport default withRouter(OutsideAlerter);","map":{"version":3,"sources":["/Users/wajeeh/Desktop/react-dashboard/src/components/OutsideAlerter.js"],"names":["React","useRef","useEffect","useHistory","withRouter","useOutsideAlerter","ref","history","handleClickOutside","event","current","contains","target","goBack","document","addEventListener","removeEventListener","OutsideAlerter","props","wrapperRef","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,kBAAvC;;AAEA,SAASC,iBAAT,CAA2BC,GAA3B,EAAgC;AAC9B,QAAMC,OAAO,GAAGJ,UAAU,EAA1B;AACA;;;;AAGA,WAASK,kBAAT,CAA4BC,KAA5B,EAAmC;AACjC,QAAIH,GAAG,CAACI,OAAJ,IAAe,CAACJ,GAAG,CAACI,OAAJ,CAAYC,QAAZ,CAAqBF,KAAK,CAACG,MAA3B,CAApB,EAAwD;AACtDL,MAAAA,OAAO,CAACM,MAAR;AACD;AACF;;AAEDX,EAAAA,SAAS,CAAC,MAAM;AACd;AACAY,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCP,kBAAvC;AACA,WAAO,MAAM;AACX;AACAM,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CR,kBAA1C;AACD,KAHD;AAID,GAPQ,CAAT;AAQD;AAED;;;;;AAGA,SAASS,cAAT,CAAwBC,KAAxB,EAA+B;AAC7B,QAAMC,UAAU,GAAGlB,MAAM,CAAC,IAAD,CAAzB;AACAI,EAAAA,iBAAiB,CAACc,UAAD,CAAjB;AAEA,SAAO;AAAK,IAAA,GAAG,EAAEA,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBD,KAAK,CAACE,QAA7B,CAAP;AACD;;AAED,eAAehB,UAAU,CAACa,cAAD,CAAzB","sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport { useHistory, withRouter } from \"react-router-dom\";\n\nfunction useOutsideAlerter(ref) {\n  const history = useHistory();\n  /**\n   * Alert if clicked on outside of element\n   */\n  function handleClickOutside(event) {\n    if (ref.current && !ref.current.contains(event.target)) {\n      history.goBack();\n    }\n  }\n\n  useEffect(() => {\n    // Bind the event listener\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  });\n}\n\n/**\n * Component that alerts if you click outside of it\n */\nfunction OutsideAlerter(props) {\n  const wrapperRef = useRef(null);\n  useOutsideAlerter(wrapperRef);\n\n  return <div ref={wrapperRef}>{props.children}</div>;\n}\n\nexport default withRouter(OutsideAlerter);\n"]},"metadata":{},"sourceType":"module"}