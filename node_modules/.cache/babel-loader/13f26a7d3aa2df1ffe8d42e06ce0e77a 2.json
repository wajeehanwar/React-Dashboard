{"ast":null,"code":"var _jsxFileName = \"/Users/wajeeh/Desktop/react-dashboard/src/components/Message.js\";\nimport React, { Component } from 'react';\nexport class Message extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.isBirthday = () => {\n      const today = new Date();\n      let currentDay = today.getDate();\n      let currentMonth = today.getMonth() + 1;\n\n      if (currentDay === this.props.users.filter(user => {\n        return user.active;\n      })[0].dobDay && currentMonth === this.props.users.filter(user => {\n        return user.active;\n      })[0].dobMonth) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n\n    this.isHoliday = () => {\n      const USA = [[1, 1, \"New Year's Day\"], [1, 20, \"Martin Luther King Jr. Day\"], [2, 14, \"Valentine's Day\"], [2, 17, \"Presidents' Day\"], [3, 3, \"Super Tuesday\"], [3, 17, \"St. Patrick's Day\"], [4, 12, \"Easter\"], [4, 13, \"Easter\"], [4, 15, \"Tax Day\"], [5, 5, \"Cinco de Mayo\"], [5, 10, \"Mother's Day\"], [5, 25, \"Memorial Day\"], [6, 21, \"Father's Day\"], [7, 3, \"Independence Day\"], [7, 4, \"Independence Day\"], [9, 7, \"Labor Day\"], [10, 12, \"Columbus Day\"], [10, 31, \"Halloween\"], [11, 3, \"Election Day\"], [11, 11, \"Veterans Day\"], [11, 26, \"Thanksgiving Day\"], [11, 27, \"Black\"], [12, 24, \"Christmas Eve\"], [12, 25, \"Christmas Day\"], [12, 31, \"New Year's Eve\"]];\n      const today = new Date();\n      let currentDay = today.getDate();\n      let currentMonth = today.getMonth() + 1;\n      let userCountry = USA;\n\n      switch (this.props.users.filter(user => {\n        return user.active;\n      })[0].country) {\n        // case \"China\":\n        //     userCountry = China;\n        //     break;\n        default:\n          userCountry = USA;\n      }\n\n      let isHoliday = false;\n      let holidayName = \"\";\n\n      for (let i = 0; i < userCountry.length; i++) {\n        if (currentDay === userCountry[i][1] && currentMonth === userCountry[i][0]) {\n          isHoliday = true;\n          holidayName = userCountry[i][2];\n        }\n      }\n\n      if (isHoliday) {\n        return `Happy ${holidayName}!`;\n      } else {\n        return \"\";\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Test Message\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, this.isHoliday() ? \"Bday Yes\" : \"Bday No\"));\n  }\n\n}\nexport default Message;","map":{"version":3,"sources":["/Users/wajeeh/Desktop/react-dashboard/src/components/Message.js"],"names":["React","Component","Message","isBirthday","today","Date","currentDay","getDate","currentMonth","getMonth","props","users","filter","user","active","dobDay","dobMonth","isHoliday","USA","userCountry","country","holidayName","i","length","render","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nexport class Message extends Component {\n\n\n    \nisBirthday = () => {\n    const today = new Date();\n    let currentDay = today.getDate();\n    let currentMonth = today.getMonth() + 1;\n    if (currentDay === this.props.users.filter(user => {return user.active})[0].dobDay && currentMonth === this.props.users.filter(user => {return user.active})[0].dobMonth) {\n        return true\n    } else {\n        return false\n    }\n}\n\nisHoliday = () => {\n    const USA = [\n        [1, 1, \"New Year's Day\"],\n        [1, 20, \"Martin Luther King Jr. Day\"],\n        [2, 14, \"Valentine's Day\"],\n        [2, 17, \"Presidents' Day\"],\n        [3, 3, \"Super Tuesday\"],\n        [3, 17, \"St. Patrick's Day\"],\n        [4, 12, \"Easter\"],\n        [4, 13, \"Easter\"],\n        [4, 15, \"Tax Day\"],\n        [5, 5, \"Cinco de Mayo\"],\n        [5, 10, \"Mother's Day\"],\n        [5, 25, \"Memorial Day\"],\n        [6, 21, \"Father's Day\"],\n        [7, 3, \"Independence Day\"],\n        [7, 4, \"Independence Day\"],\n        [9, 7, \"Labor Day\"],\n        [10, 12, \"Columbus Day\"],\n        [10, 31, \"Halloween\"],\n        [11, 3, \"Election Day\"],\n        [11, 11, \"Veterans Day\"],\n        [11, 26, \"Thanksgiving Day\"],\n        [11, 27, \"Black\"],\n        [12, 24, \"Christmas Eve\"],\n        [12, 25, \"Christmas Day\"],\n        [12, 31, \"New Year's Eve\"]\n    ];\n\n    const today = new Date();\n    let currentDay = today.getDate();\n    let currentMonth = today.getMonth() + 1;\n\n\n    let userCountry = USA;\n    switch (this.props.users.filter(user => {return user.active})[0].country) {\n        // case \"China\":\n        //     userCountry = China;\n        //     break;\n        default:\n            userCountry = USA;\n    }\n\n\n      let isHoliday = false;\n      let holidayName = \"\";\n      for (let i = 0; i < userCountry.length; i++) {\n        if (currentDay === userCountry[i][1] && currentMonth === userCountry[i][0]) {\n          isHoliday = true;\n          holidayName = userCountry[i][2];\n        }\n      }\n      if (isHoliday) {\n          return `Happy ${holidayName}!`\n      } else {\n          return \"\"\n      }\n}\n\n\n    render() {\n        \n        \n        return (\n            <div>\n                \n              \n                <h3 style={{color: \"white\"}}>Test Message</h3>\n                <p>\n                    {\n                        this.isHoliday() ? (\n                            \"Bday Yes\"\n                        ) : (\n                            \n                            \"Bday No\"\n                            \n                        )\n                    }   \n                </p>\n                \n            </div>\n        )\n    }\n}\n\n\n\nexport default Message\n"]},"metadata":{},"sourceType":"module"}